import  math
import  numpy
import  base64
import  pickle
import  bz2
import  qm3.utils.fep


xfor = b'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'
xrev = b'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'


xfor = pickle.loads( bz2.BZ2Decompressor().decompress( base64.b64decode( xfor ) ) )
xrev = pickle.loads( bz2.BZ2Decompressor().decompress( base64.b64decode( xrev ) ) )

dfor = qm3.utils.fep.fep_integrate( xfor )
print( "Samples: ", dfor["Samples"] )
print( "dF:      ", dfor["dF"]/4.184, "+/-", dfor["Error"]/4.184, "_kcal/mol" )
print( "Samp.rat:", dfor["Sampling Ratio"] )
print( "Autocorr:", dfor["Autocorrelation"] )
print()

drev = qm3.utils.fep.fep_integrate( xrev )
print( "Samples: ", drev["Samples"] )
print( "dF:      ", drev["dF"]/4.184, "+/-", drev["Error"]/4.184, "_kcal/mol" )
print( "Samp.rat:", drev["Sampling Ratio"] )
print( "Autocorr:", drev["Autocorrelation"] )
print()

print( "<dF>:    ", 0.5*( dfor["dF"] - drev["dF"] )/4.184, "+/-", math.sqrt( math.pow( dfor["Error"], 2 ) + math.pow( drev["Error"], 2 ) )/4.184, "_kcal/mol" )
print()

dbar = qm3.utils.fep.bennett_acceptance_ratio( xfor, xrev )
print( "dF(BAR): ", dbar["dF"]/4.184, "+/-", dbar["Error"]/4.184, "_kcal/mol" )
